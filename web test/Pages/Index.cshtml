@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model web_test.Pages.IndexModel
@{
    ViewData["Title"] = "Главная страница";
    Layout = "_Layout.cshtml";
}

<!-- Подключаем стили -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

<div class="container-fluid mt-4">
    <!-- Шапка: подразделение, пользователь, фильтры -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex flex-wrap align-items-center justify-content-between bg-light p-3 rounded">
                <div>
                    <h5 class="mb-0">Подразделение: @Model.DepartmentName</h5>
                    <p class="text-muted mb-0">Текущий пользователь: @Model.UserName</p>
                </div>
                <!-- Форма с фильтрами (скрытая кнопка "Применить" мы убираем) -->
                <form method="get" id="filterForm" class="d-flex flex-wrap align-items-end gap-2">
                    <!-- Фильтр по датам (при необходимости тоже можно сделать автообновление) -->
                    <div class="d-flex flex-column">
                        <label for="startDate" class="form-label">C даты:</label>
                        <input type="date" class="form-control" id="startDate" name="StartDate" 
                               value="@(Model.StartDate?.ToString("yyyy-MM-dd") ?? "")" />
                    </div>
                    <div class="d-flex flex-column">
                        <label for="endDate" class="form-label">По дату:</label>
                        <input type="date" class="form-control" id="endDate" name="EndDate" 
                               value="@(Model.EndDate?.ToString("yyyy-MM-dd") ?? "")" />
                    </div>
                    <!-- Выпадающий список для выбора исполнителя -->
                    <div class="d-flex flex-column">
                        <label for="executor" class="form-label">Исполнитель:</label>
                        <select id="executor" name="executor" class="form-select">
                            <option value="">Все исполнители</option>
                            @foreach (var item in Model.Executors)
                            {
                                <option value="@item.Value" @@(item.Value == Model.executor ? "selected" : "")>
                                    @item.Text
                                </option>
                            }
                        </select>
                    </div>
                    <!-- Поле поиска -->
                    <div class="d-flex flex-column">
                        <label for="search" class="form-label">Поиск:</label>
                        <input type="text" class="form-control" id="search" name="search" placeholder="Поиск..." 
                               value="@Model.SearchQuery" />
                    </div>
                    <!-- Кнопка выхода (Logout) -->
                    <a asp-page="./Index" asp-page-handler="Logout" class="btn btn-outline-danger">Выход</a>
                </form>
            </div>
        </div>
    </div>

    <form method="post" class="position-relative">
        <!-- Скрытые поля, чтобы фильтры передавались при POST -->
        <input type="hidden" asp-for="StartDate" />
        <input type="hidden" asp-for="EndDate" />
        <input type="hidden" asp-for="Executor" />
        <input type="hidden" asp-for="SearchQuery" />

        <button type="submit" class="btn btn-primary" id="generatePdfBtn">
            <span class="spinner-border spinner-border-sm me-2"
                  role="status" aria-hidden="true" style="display:none;"></span>
            Сгенерировать PDF
        </button>
    </form>

    <!-- Таблица работ (Partial view) -->
    <div class="row mb-4">
        <div class="col-12">
            <div id="workItemsTableContainer">
                @await Html.PartialAsync("_WorkItemsTablePartial", Model)
            </div>
        </div>
    </div>

    <!-- Кнопки внизу страницы -->
    <div class="row mb-4">
        <div class="col-12 d-flex gap-3">
            <button type="button" class="btn btn-success" id="openEditorBtn">
                Сформировать сдаточный чек
            </button>
            <button type="button" class="btn btn-secondary" id="refreshBtn">
                Обновить
            </button>
        </div>
    </div>
</div>

<!-- Модальное окно для редактора (Handsontable) -->
<div class="modal fade" id="editorModal" tabindex="-1" aria-labelledby="editorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <!-- Используем modal-fullscreen для максимальной ширины -->
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="editorModalLabel">Редактор сдаточного чека</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
            </div>
            <div class="modal-body">
                <!-- Контейнер для Handsontable -->
                <div id="spreadsheet" style="width: 100%; height: 80vh;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="exportPdfBtn">Экспорт в PDF</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<!-- Скрипты: jQuery, Bootstrap, Handsontable -->
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.js"></script>

@section Scripts {
    <style>
        /* Ограничиваем ширину таблицы и добавляем горизонтальную прокрутку */
        #spreadsheet {
            width: 100%;
            height: 80vh;
            overflow: auto;
            max-width: 100%;
        }

        .handsontable th,
        .handsontable td {
            min-width: 50px;
            max-width: 300px;
        }

        .handsontable {
            box-sizing: border-box;
        }

        .handsontable colHeader {
            position: sticky;
            top: 0;
            background-color: #f8f9fa; /* Цвет фона заголовков */
            z-index: 1;
        }
    </style>

    <script>
                // При клике на кнопку "Сгенерировать PDF" показываем спиннер
        document.getElementById("generatePdfBtn").addEventListener("click", function () {
            // Показываем иконку загрузки (spinner)
            this.querySelector(".spinner-border").style.display = "inline-block";
        });

        $(document).ready(function(){

            // Вешаем обработчик на изменение дат (при необходимости),
            // выбор исполнителя (#executor) и ввод в поле поиска (#search).
            // При любом изменении мы формируем AJAX‑запрос для обновления таблицы.
            $('#startDate, #endDate, #executor, #search').on('change keyup', function(e) {
                // Делаем запрос на сервер (OnGetFilterAsync)
                // Соберём параметры в объект
                var data = {
                    startDate: $('#startDate').val(),
                    endDate:   $('#endDate').val(),
                    executor:  $('#executor').val(),
                    search:    $('#search').val()
                };

                $.ajax({
                    url: '@Url.Page("Index", "Filter")',
                    type: 'GET',
                    data: data,
                    success: function(result) {
                        // Заменяем контейнер таблицы на обновлённый HTML
                        $('#workItemsTableContainer').html(result);
                    }
                });
            });

            // Кнопка &laquo;Обновить&raquo; – просто перезагружает страницу.
            $('#refreshBtn').click(function(){
                location.reload();
            });

            // Инициализация модального окна и Handsontable
            var hot; // переменная для редактора
            var editorModal = new bootstrap.Modal(document.getElementById('editorModal'), {
                keyboard: false
            });

            $('#openEditorBtn').click(function(){
                // Открываем модальное окно
                editorModal.show();

                // Инициализируем Handsontable один раз
                if (!hot) {
                    var container = document.getElementById('spreadsheet');
                    // Подготовим массив данных для Handsontable
                    var data = @Html.Raw(Json.Serialize(Model.WorkItems.Select(item => new object[] {
                        item.DocumentNumber,
                        item.DocumentName,
                        item.WorkName,
                        item.Executor,
                        item.Controller,
                        item.Approver,
                        item.PlanDate?.ToString("dd.MM.yyyy"),
                        item.Korrect1?.ToString("dd.MM.yyyy"),
                        item.Korrect2?.ToString("dd.MM.yyyy"),
                        item.Korrect3?.ToString("dd.MM.yyyy"),
                        item.FactDate?.ToString("dd.MM.yyyy")
                    }).ToList()));

                    hot = new Handsontable(container, {
                        data: data,
                        rowHeaders: true,
                        colHeaders: [
                            '№ документа/работы', 'Наименование документа', 'Наименование работы', 'Исполнитель(и)',
                            'Контролирующий', 'Принимающий', 'План', 'Корр1', 'Корр2', 'Корр3', 'Факт'
                        ],
                        contextMenu: true,
                        stretchH: 'all',
                        manualColumnResize: true,
                        autoColumnSize: { samplingRatio: 23 },
                        width: '100%',
                        licenseKey: 'non-commercial-and-evaluation'
                    });
                }
            });

            // Обработка кнопки "Экспорт в PDF"
            $('#exportPdfBtn').click(function(){
                // Сохраняем исходные стили таблицы
                const spreadsheet = document.getElementById('spreadsheet');
                const originalHeight = spreadsheet.style.height;
                const originalOverflow = spreadsheet.style.overflow;

                // Временно отключаем прокрутку и увеличиваем высоту таблицы
                spreadsheet.style.height = 'auto';
                spreadsheet.style.overflow = 'visible';

                // Используем html2canvas для создания изображения таблицы
                html2canvas(spreadsheet).then(canvas => {
                    const imgData = canvas.toDataURL('image/png');
                    const pdf = new jspdf.jsPDF({
                        orientation: 'landscape',
                        unit: 'mm',
                        format: 'a4'
                    });

                    const imgWidth = 297; // Ширина A4 (ландшафт)
                    const imgHeight = (canvas.height * imgWidth) / canvas.width;

                    pdf.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);
                    pdf.save("sdatocny_chek.pdf");

                    // Восстанавливаем стили
                    spreadsheet.style.height = originalHeight;
                    spreadsheet.style.overflow = originalOverflow;
                });
            });
        });
    </script>
}