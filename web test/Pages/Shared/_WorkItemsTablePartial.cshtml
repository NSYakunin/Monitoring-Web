@model Monitoring.UI.Pages.IndexModel

<!--
  Здесь мы добавили стили иконок (стрелки), а также реализовали одинаковую пагинацию
  и сверху, и снизу.
-->
@if (Model.TotalPages > 1)
{
    <div class="row mb-2">
        <div class="col d-flex justify-content-center align-items-center">
            <nav aria-label="Page navigation" class="my-custom-paging">
                <ul class="pagination custom-pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a href="#" class="page-link" onclick="changePage(@(Model.CurrentPage - 1)); return false;">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        if (i == Model.CurrentPage)
                        {
                            <li class="page-item active"><span class="page-link">@i</span></li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a href="#" class="page-link" onclick="changePage(@i); return false;">@i</a>
                            </li>
                        }
                    }
                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a href="#" class="page-link" onclick="changePage(@(Model.CurrentPage + 1)); return false;">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
}

<table class="table table-bordered table-hover sticky-header-table" id="workItemsTable">
    <thead>
        <tr class="custom-header">
            <th>№</th>
            <th>Наименование документа</th>
            <th>Наименование работы</th>
            <th>Исполнители</th>
            <th>Контролирующий</th>
            <th>Принимающий</th>
            <th>План</th>
            <th>Корр1</th>
            <th>Корр2</th>
            <th>Корр3</th>
            <th>
                <span class="toggle-all-btn" title="Выделить/снять все">
                    📌
                </span>
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            // Нумерация с учетом текущей страницы
            int num = 1 + ((Model.CurrentPage - 1) * Model.PageSize);
            foreach (var item in Model.WorkItems)
            {
                // Подсветка
                string highlightClass = item.HighlightCssClass ?? "";

                // Данные заявки (Pending)
                var dataRequestId = item.UserPendingRequestId?.ToString() ?? "";
                var dataRequestType = item.UserPendingRequestType ?? "";
                var dataRequestDate = item.UserPendingProposedDate?.ToString("yyyy-MM-dd") ?? "";
                var dataRequestNote = item.UserPendingRequestNote ?? "";
                var dataReceiver = item.UserPendingReceiver ?? "";

                // Проверяем, можем ли мы отправлять заявки
                bool canSendRequest = false;
                if (!string.IsNullOrEmpty(Model.UserName) &&
                !string.IsNullOrEmpty(item.Executor) &&
                Model.HasSendCloseRequestAccess)
                {
                    var exList = item.Executor.Split(',', StringSplitOptions.RemoveEmptyEntries)
                    .Select(x => x.Trim());
                    canSendRequest = exList.Contains(Model.UserName);
                }
                <tr data-id="@item.DocumentNumber"
                    data-request-id="@dataRequestId"
                    data-request-type="@dataRequestType"
                    data-request-date="@dataRequestDate"
                    data-request-note="@dataRequestNote"
                    data-receiver="@dataReceiver"
                    class="@highlightClass">
                    <td class="row-index">@num</td>
                    <td>@item.DocumentName</td>
                    <td>@item.WorkName</td>
                    <td>@Html.Raw(item.Executor?.Replace(", ", "<br>"))</td>
                    <td>@item.Controller</td>
                    <td>@item.Approver</td>
                    <td>@item.PlanDate?.ToShortDateString()</td>
                    <td>@item.Korrect1?.ToShortDateString()</td>
                    <td>@item.Korrect2?.ToShortDateString()</td>
                    <td>@item.Korrect3?.ToShortDateString()</td>
                    <td class="align-middle">
                        <input type="checkbox" class="row-select" />
                        @if (canSendRequest)
                        {
                            <button type="button" class="btn btn-sm btn-outline-secondary ms-2"
                                    onclick="openRequestModal('@item.DocumentNumber', '@item.Controller', '@item.Approver', this)">
                                📝
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-sm btn-outline-secondary ms-2" disabled>📝</button>
                        }
                    </td>
                </tr>
                num++;
            }
        }
    </tbody>
</table>

@if (Model.TotalPages > 1)
{
    <div class="row mt-3">
        <div class="col d-flex justify-content-center">
            <nav aria-label="Page navigation" class="my-custom-paging">
                <ul class="pagination custom-pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a href="#" class="page-link" onclick="changePage(@(Model.CurrentPage - 1)); return false;">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        if (i == Model.CurrentPage)
                        {
                            <li class="page-item active"><span class="page-link">@i</span></li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a href="#" class="page-link" onclick="changePage(@i); return false;">@i</a>
                            </li>
                        }
                    }
                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a href="#" class="page-link" onclick="changePage(@(Model.CurrentPage + 1)); return false;">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
}

<script>
    // Функция для смены страницы и подгрузки данных по AJAX
    function changePage(page) {
        $('#currentPage').val(page);
        $.ajax({
            url: '@Url.Page("Index", "Filter")',
            type: 'GET',
            data: {
                startDate: $('#startDate').val(),
                endDate: $('#endDate').val(),
                executor: $('#executor').val(),
                approver: $('#approver').val(),
                searchQuery: $('#search').val(),
                selectedDivision: $('#divisionSelect').val(),
                useAllDivisions: $('#useAllDivisions').val(),
                currentPage: page
            },
            success: function(result) {
                $('#workItemsTableContainer').html(result);
                initSortableTable();
            }
        });
    }
</script>

<style>
    .sticky-header-table {
        width: 100%;
        border-collapse: collapse;
    }

        .sticky-header-table thead th {
            position: sticky;
            top: 0;
            z-index: 50;
        }

    .custom-header th {
        background: linear-gradient(145deg, #2c3e50, #34495e);
        color: white;
        font-weight: 500;
        padding: 5px; /* Уменьшенный padding */
        border-bottom: 2px solid #1a252f;
        transition: all 0.3s ease;
        position: relative;
    }

        .custom-header th:hover {
            background: linear-gradient(145deg, #34495e, #2c3e50);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .custom-header th::after {
            content: '';
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            height: 60%;
            width: 1px;
            background: rgba(255,255,255,0.1);
        }

        .custom-header th:last-child::after {
            display: none;
        }

    .toggle-all-btn {
        cursor: pointer;
        transition: transform 0.3s ease;
        display: inline-block;
        padding: 5px;
    }

        .toggle-all-btn:hover {
            transform: rotate(90deg);
            color: #ecf0f1;
        }

    /* Для пагинации */
    .custom-pagination .page-link {
        color: #343a40;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .custom-pagination .page-link:hover {
            transform: scale(1.05);
            box-shadow: 0 2px 6px rgba(0,0,0,0.15);
        }

    .custom-pagination .page-item.active .page-link {
        background-color: #2c3e50;
        border-color: #2c3e50;
        color: #fff;
    }

    .my-custom-paging .page-link {
        margin: 0 2px;
        border-radius: 4px;
    }
</style>