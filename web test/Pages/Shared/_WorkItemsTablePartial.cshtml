@model Monitoring.UI.Pages.IndexModel

<!-- Храним текущую страницу, чтобы подгрузка AJAX знала, куда возвращаться -->
<input type="hidden" id="CurrentPage" value="@Model.CurrentPage" />

<table class="table table-bordered table-hover sticky-header-table" id="workItemsTable">
    <thead>
        <tr class="custom-header">
            <th>№</th>
            <th>Наименование документа</th>
            <th>Наименование работы</th>
            <th>Исполнители</th>
            <th>Контролирующий</th>
            <th>Принимающий</th>
            <th>План</th>
            <th>Корр1</th>
            <th>Корр2</th>
            <th>Корр3</th>
            <th>
                <!-- Кнопка &laquo;выделить/снять все&raquo; (только на текущей странице) -->
                <span class="toggle-all-btn" title="Выделить/снять все"> 📌 </span>
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            // Считаем стартовый номер: если страница 1, то начинаем с 1, если страница 2, то с 1 + pageSize и т.д.
            int startIndex = (Model.CurrentPage - 1) * Model.PageSize + 1;
            int num = startIndex;
        }

        @foreach (var item in Model.WorkItems)
        {
            // Подсветка строки, если есть Pending-заявка
            string highlightClass = item.HighlightCssClass ?? "";

            // Собираем данные заявки (если есть)
            var dataRequestId = item.UserPendingRequestId?.ToString() ?? "";
            var dataRequestType = item.UserPendingRequestType ?? "";
            var dataRequestDate = item.UserPendingProposedDate?.ToString("yyyy-MM-dd") ?? "";
            var dataRequestNote = item.UserPendingRequestNote ?? "";
            var dataReceiver = item.UserPendingReceiver ?? "";

            // Проверяем, можем ли мы отправлять заявки
            bool canSendRequest = false;
            if (!string.IsNullOrEmpty(Model.UserName)
            && !string.IsNullOrEmpty(item.Executor)
            && Model.HasSendCloseRequestAccess)
            {
                var exList = item.Executor.Split(',', StringSplitOptions.RemoveEmptyEntries)
                .Select(x => x.Trim());
                canSendRequest = exList.Contains(Model.UserName);
            }

            <tr data-id="@item.DocumentNumber"
                data-request-id="@dataRequestId"
                data-request-type="@dataRequestType"
                data-request-date="@dataRequestDate"
                data-request-note="@dataRequestNote"
                data-receiver="@dataReceiver"
                class="@highlightClass">

                <td class="row-index">@num</td>
                <td>@item.DocumentName</td>
                <td>@item.WorkName</td>
                <td>@Html.Raw(item.Executor?.Replace(", ", "<br>"))</td>
                <td>@item.Controller</td>
                <td>@item.Approver</td>
                <td>@item.PlanDate?.ToShortDateString()</td>
                <td>@item.Korrect1?.ToShortDateString()</td>
                <td>@item.Korrect2?.ToShortDateString()</td>
                <td>@item.Korrect3?.ToShortDateString()</td>

                <td class="align-middle">
                    <!-- Чекбокс выбора -->
                    <input type="checkbox" class="row-select" />
                    <!-- Кнопка "Создать/редактировать заявку" -->
                    @if (canSendRequest)
                    {
                        <button type="button" class="btn btn-sm btn-outline-secondary ms-2"
                                onclick="openRequestModal('@item.DocumentNumber', '@item.Controller', '@item.Approver', this)">
                            📝
                        </button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-sm btn-outline-secondary ms-2" disabled>📝</button>
                    }
                </td>
            </tr>

            num++;
        }
    </tbody>
</table>

<!-- Пагинация внизу -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Постраничная навигация">
        <ul class="pagination justify-content-center">

            <li class="page-item @(Model.CurrentPage <= 1 ? "disabled" : "")">
                <a class="page-link" href="javascript:void(0);" onclick="goToPage(@(Model.CurrentPage - 1))">
                    Предыдущая
                </a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="javascript:void(0);"
                       onclick="goToPage(@i)">
                        @i
                    </a>
                </li>
            }

            <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="javascript:void(0);"
                   onclick="goToPage(@(Model.CurrentPage + 1))">
                    Следующая
                </a>
            </li>
        </ul>
    </nav>
}

<style>
    .sticky-header-table {
        width: 100%;
        border-collapse: collapse;
    }

        .sticky-header-table thead th {
            position: sticky;
            top: 0;
            z-index: 50;
        }

    .custom-header th {
        background: linear-gradient(145deg, #2c3e50, #34495e);
        color: white;
        font-weight: 500;
        padding: 5px;
        border-bottom: 2px solid #1a252f;
        transition: all 0.3s ease;
        position: relative;
    }

        .custom-header th:hover {
            background: linear-gradient(145deg, #34495e, #2c3e50);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .custom-header th::after {
            content: '';
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            height: 60%;
            width: 1px;
            background: rgba(255,255,255,0.1);
        }

        .custom-header th:last-child::after {
            display: none;
        }

    .toggle-all-btn {
        cursor: pointer;
        transition: transform 0.3s ease;
        display: inline-block;
        padding: 5px;
    }

        .toggle-all-btn:hover {
            transform: rotate(90deg);
            color: #ecf0f1;
        }
</style>