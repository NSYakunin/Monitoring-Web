@model Monitoring.UI.Pages.IndexModel

<!--
  Здесь мы добавили стили:
  1) Уменьшили padding (с 15px до 5px) в заголовке таблицы.
  2) Сделали заголовок фиксированным (sticky) при прокрутке.
  3) Добавили комментарии, чтобы было понятно, как изменить высоту заголовка.
-->

<table class="table table-bordered table-hover sticky-header-table" id="workItemsTable">
    <thead>
        <tr class="custom-header">
            <th>№</th>
            <th>Наименование документа</th>
            <th>Наименование работы</th>
            <th>Исполнители</th>
            <th>Контролирующий</th>
            <th>Принимающий</th>
            <th>План</th>
            <th>Корр1</th>
            <th>Корр2</th>
            <th>Корр3</th>
            <th>
                <span class="toggle-all-btn" title="Выделить/снять все">
                    📌
                </span>
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            int num = 1;
            foreach (var item in Model.WorkItems)
            {
                // Подсветка
                string highlightClass = item.HighlightCssClass ?? "";

                // Данные заявки (Pending)
                var dataRequestId = item.UserPendingRequestId?.ToString() ?? "";
                var dataRequestType = item.UserPendingRequestType ?? "";
                var dataRequestDate = item.UserPendingProposedDate?.ToString("yyyy-MM-dd") ?? "";
                var dataRequestNote = item.UserPendingRequestNote ?? "";
                var dataReceiver = item.UserPendingReceiver ?? "";

                // Проверяем, можем ли мы отправлять заявки
                bool canSendRequest = false;
                if (!string.IsNullOrEmpty(Model.UserName) &&
                !string.IsNullOrEmpty(item.Executor) &&
                Model.HasSendCloseRequestAccess)
                {
                    var exList = item.Executor.Split(',', StringSplitOptions.RemoveEmptyEntries)
                    .Select(x => x.Trim());
                    // Если текущий пользователь в списке исполнителей
                    canSendRequest = exList.Contains(Model.UserName);
                }

                <tr data-id="@item.DocumentNumber"
                    data-request-id="@dataRequestId"
                    data-request-type="@dataRequestType"
                    data-request-date="@dataRequestDate"
                    data-request-note="@dataRequestNote"
                    data-receiver="@dataReceiver"
                    class="@highlightClass">

                    <td class="row-index">@num</td>
                    <td>@item.DocumentName</td>
                    <td>@item.WorkName</td>
                    <td>@Html.Raw(item.Executor?.Replace(", ", "<br>"))</td>
                    <td>@item.Controller</td>
                    <td>@item.Approver</td>
                    <td>@item.PlanDate?.ToShortDateString()</td>
                    <td>@item.Korrect1?.ToShortDateString()</td>
                    <td>@item.Korrect2?.ToShortDateString()</td>
                    <td>@item.Korrect3?.ToShortDateString()</td>

                    <td class="align-middle">
                        <input type="checkbox" class="row-select" />
                        @if (canSendRequest)
                        {
                            <button type="button" class="btn btn-sm btn-outline-secondary ms-2"
                                    onclick="openRequestModal('@item.DocumentNumber', '@item.Controller', '@item.Approver', this)">
                                📝
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-sm btn-outline-secondary ms-2" disabled>📝</button>
                        }
                    </td>
                </tr>

                num++;
            }
        }
    </tbody>
</table>

<style>
    /*
         * 1) Для "плавающего" заголовка (sticky header) нам нужно:
         *    - дать контейнеру overflow и ограничение высоты (если нужно)
         *      ИЛИ сделать сам заголовок position: sticky.
         *    - В данном решении мы делаем sticky непосредственно на th.
         *
         * 2) Чтобы заголовок таблицы был менее высоким, мы уменьшаем padding (отступы).
         *    Ниже в классе .custom-header th заменили padding: 15px на, например, 5px.
         *    Можно ещё отрегулировать line-height, если нужно уменьшить/увеличить визуальную высоту.
         */

    /* Класс-обёртка, чтобы у таблицы была горизонтальная прокрутка при необходимости
           (если ширина таблицы большая), но вертикальный скролл будет у всей страницы
           - заголовок "прилипает" к верху окна. */
    .sticky-header-table {
        width: 100%;
        border-collapse: collapse;
    }

        /* Делаем верхние ячейки (th) "липкими" (sticky).
           z-index нужен, чтобы заголовок оставался поверх остальных элементов.
        */
        .sticky-header-table thead th {
            position: sticky;
            top: 0; /* Заголовок "прилипает" к верху окна */
            z-index: 50; /* Достаточно большой, чтобы перекрыть контент */
        }

    /* Стили шапки */
    .custom-header th {
        background: linear-gradient(145deg, #2c3e50, #34495e);
        color: white;
        font-weight: 500;
        /* УМЕНЬШИЛИ ПАДДИНГ: было 15px, теперь 5px */
        padding: 5px;
        /* Отступ снизу подчеркивания */
        border-bottom: 2px solid #1a252f;
        transition: all 0.3s ease;
        position: relative;
    }

        .custom-header th:hover {
            background: linear-gradient(145deg, #34495e, #2c3e50);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .custom-header th::after {
            content: '';
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            height: 60%;
            width: 1px;
            background: rgba(255,255,255,0.1);
        }

        .custom-header th:last-child::after {
            display: none;
        }

    /* Иконка "Выделить всё" */
    .toggle-all-btn {
        cursor: pointer;
        transition: transform 0.3s ease;
        display: inline-block;
        padding: 5px;
    }

        .toggle-all-btn:hover {
            transform: rotate(90deg);
            color: #ecf0f1;
        }
</style>